pipeline {
  environment {
    imagename = "kubernetesdevops/kubernetesdevops/sonarqube-jenkins"
    registryCredential = 'credential docker'
    dockerImage = ''
  }   
  agent any
  stages {
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build imagename
        }
      }
    }
    stage('Deploy Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push("$BUILD_NUMBER")
             dockerImage.push('latest')

          }
        }
      }
    }
    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $imagename:$BUILD_NUMBER"
         sh "docker rmi $imagename:latest"

      }
    }
    stage ('Scan and Build Jar File') {
      steps {
        withSonarQubeEnv(installationName: 'sonrq1', credentialsId: 'SonarQubeToken') {
        sh 'mvn clean package sonar:sonar'
        }
      }
    } 
  }
  }
}

